# docker-compose.yml

version: '3.8'

services:
  
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile.web
    expose:
      - 80
    environment:
      - DB_URL=postgresql://${DB_USER}:${DB_PASS}@db:${DB_PORT}
      - DB_NAME=${DB_NAME}
      - GOOGLEMAPS_API_KEY=${GOOGLEMAPS_API_KEY}
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`medicine-warriors.node.cloudlets.zone`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"


  db:
    container_name: db
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}


  traefik:
    container_name: traefik
    image: traefik:v2.6.1
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=piotr.konorski@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # networks:
    #   - web

# networks:
#   web:
#     external: true

volumes:
  postgres_data:
  letsencrypt:
