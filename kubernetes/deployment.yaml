apiVersion: apps/v1
kind: Deployment
metadata:
  name: medicine-warriors-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: medicine-warriors-backend
  template:
    metadata:
      labels:
        name: medicine-warriors-backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10000
        runAsGroup: 10001
        fsGroup: 10001
      containers:
      - name: backend
        image: medicinewarriors/medicine-warriors-backend:29b7cf00c6653f9a329df6b28ae4f1872f3ec328
        ports:
          - name: http
            containerPort: 5000
            protocol: TCP
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /live
            port: http
          failureThreshold: 1
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 100m
            memory: 220Mi
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          procMount: "Default"
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: DB_PASS
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: DB_NAME
---
apiVersion: v1
kind: Service
metadata:
  name: service-medicine-warriors-backend
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  type: ClusterIP
  selector:
    name: medicine-warriors-backend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: medicine-warriors-frontend-nginx-conf
data:
  nginx.conf: |
    # The identifier Backend is internal to nginx, and used to name this specific upstream
    upstream Backend {
        # service-medicine-warriors-backend is the internal DNS name used by the backend Service inside Kubernetes
        server service-medicine-warriors-backend;
    }

    server {
      listen       8080;
      listen  [::]:8080;
      server_name  localhost;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      location /api {
        # The following statement will proxy traffic to the upstream named Backend
        rewrite ^/api(.*) $1 break;
        proxy_pass http://Backend;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: medicine-warriors-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: medicine-warriors-frontend
  template:
    metadata:
      labels:
        name: medicine-warriors-frontend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5000
        runAsGroup: 5000
        fsGroup: 5000
      containers:
      - name: frontend
        image: medicinewarriors/medicine-warriors-frontend:29b7cf00c6653f9a329df6b28ae4f1872f3ec328
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /index.html
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /index.html
            port: http
          failureThreshold: 1
          periodSeconds: 10
        env:
        - name: API_URL
          value: "https://medicine-warriors-backend.default.svc.cluster.local"
        - name: GOOGLEMAPS_API_KEY
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: GOOGLEMAPS_API_KEY
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          readOnly: true
          name: medicine-warriors-frontend-nginx-conf
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          procMount: "Default"
      volumes:
      - name: medicine-warriors-frontend-nginx-conf
        configMap:
          name: medicine-warriors-frontend-nginx-conf
          items:
            - key: nginx.conf
              path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: service-medicine-warriors-frontend
spec:
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  type: LoadBalancer
  selector:
    name: medicine-warriors-frontend