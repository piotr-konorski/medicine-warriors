  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: medicine-warriors-backend
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: medicine-warriors-backend-pods
    template:
      metadata:
        labels:
          app: medicine-warriors-backend-pods
      spec:
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        automountServiceAccountToken: false
        containers:
        - name: ctr-backend
          image: medicinewarriors/medicine-warriors-backend:3028f8f217efe570dc5213251a6c51d8629705c6
          imagePullPolicy: Always
          ports:
          - name: http
            containerPort: 5000
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            procMount: "Default"
          resources:
            requests:
              memory: "100Mi"
              cpu: "30m"
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: medicine-secrets
                key: DB_HOST
          - name: DB_URL
            valueFrom:
              secretKeyRef:
                name: medicine-secrets
                key: DB_URL
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: medicine-secrets
                key: DB_NAME
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: medicine-secrets
                key: DB_PORT
---
apiVersion: v1
kind: Service
metadata:
  name: medicine-warriors-backend
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: medicine-warriors-backend-pods
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: medicine-warriors-frontend-nginx-conf
data:
  nginx.conf: |
    # The identifier Backend is internal to nginx, and used to name this specific upstream
    upstream Backend {
        # service-projectapp-backend is the internal DNS name used by the backend Service inside Kubernetes
        server medicine-warriors-backend;
    }
    server {
      listen       8080;
      listen  [::]:8080;
      server_name  localhost;
      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }
      location /api {
        # The following statement will proxy traffic to the upstream named Backend
        rewrite ^/api(.*) $1 break;
        proxy_pass http://Backend;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: medicine-warriors-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: medicine-warriors-frontend
  template:
    metadata:
      labels:
        name: medicine-warriors-frontend
    spec:
      # securityContext:
      #   runAsNonRoot: true
      #   runAsUser: 5000
      #   runAsGroup: 5000
      #   fsGroup: 5000
      containers:
      - name: frontend
        image: medicinewarriors/medicine-warriors-frontend:3028f8f217efe570dc5213251a6c51d8629705c6
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /index.html
            port: http
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /index.html
            port: http
          failureThreshold: 1
          periodSeconds: 10
        env:
        - name: API_URL
          value: "http://medicine-warriors-backend.default.svc.cluster.local"
        - name: GOOGLEMAPS_API_KEY
          valueFrom:
            secretKeyRef:
              name: medicine-secrets
              key: GOOGLEMAPS_API_KEY
        volumeMounts:
        - mountPath: /etc/nginx/conf.d # mount nginx-conf volume to /etc/nginx/conf.d
          readOnly: true
          name: medicine-warriors-frontend-nginx-conf
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
          procMount: "Default"
      volumes:
      - name: medicine-warriors-frontend-nginx-conf
        configMap:
          name: medicine-warriors-frontend-nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx/conf.d/default.conf file
          items:
            - key: nginx.conf
              path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: medicine-warriors-frontend
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    name: medicine-warriors-frontend